import 'package:dala_dev_design_system/src/tokens/color/tokens.g.dart';
import 'package:dala_dev_design_system/src/tokens/dimensions/tokens.g.dart';
import 'package:flutter/material.dart';
class AppComponents {

  static  Color buttongroupButtonPrimaryBgColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonPrimaryBgColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonPrimaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonPrimaryIconColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonPrimaryIconColorHover = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonPrimaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonPrimaryBorderColorDefault = DefaultColorTokens().none;
  static  Color buttongroupButtonPrimaryBorderColorHover = DefaultColorTokens().none;
  static  Color buttongroupButtonPrimaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color buttongroupButtonPrimaryTextColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonPrimaryTextColorHover = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonPrimaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonSecondaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color buttongroupButtonSecondaryBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color buttongroupButtonSecondaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonSecondaryBorderColorDefault = DefaultColorTokens().semanticBorderSoft;
  static  Color buttongroupButtonSecondaryBorderColorHover = DefaultColorTokens().semanticBorderSoftHover;
  static  Color buttongroupButtonSecondaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color buttongroupButtonSecondaryTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonSecondaryTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonSecondaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonSecondaryIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonSecondaryIconColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonSecondaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonTertiaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color buttongroupButtonTertiaryBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color buttongroupButtonTertiaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonTertiaryTextColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonTertiaryTextColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonTertiaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonTertiaryIconColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonTertiaryIconColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonTertiaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonTertiaryBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonTertiaryBorderColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonTertiaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color buttongroupButtonWhiteBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color buttongroupButtonWhiteBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color buttongroupButtonWhiteBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonWhiteTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonWhiteTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonWhiteTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonWhiteIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonWhiteIconColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonWhiteIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonWhiteBorderColorDefault = DefaultColorTokens().none;
  static  Color buttongroupButtonWhiteBorderColorHover = DefaultColorTokens().none;
  static  Color buttongroupButtonWhiteBorderColorDisabled = DefaultColorTokens().none;
  static  double buttongroupButtonBorderWidth = DefaultSizeTokens().borderWidthButtons.width;
  static  double buttongroupButtonSBorderWidth = DefaultSizeTokens().borderWidthButtons.width;
  static  double buttongroupButtonSBorderRadius = DefaultSizeTokens().borderRadiusButtons.width;
  static  double buttongroupButtonSPaddingRight = DefaultSizeTokens().spacing4x.width;
  static  double buttongroupButtonSPaddingLeft = DefaultSizeTokens().spacing4x.width;
  static  double buttongroupButtonSSpacing = DefaultSizeTokens().spacing2x.width;
  static  double buttongroupButtonSHeight = DefaultSizeTokens().sizeS.width;
  static  double buttongroupButtonSMinWidth = buttongroupButtonSHeight;
  static  double buttongroupButtonMBorderWidth = DefaultSizeTokens().borderWidthButtons.width;
  static  double buttongroupButtonMBorderRadius = DefaultSizeTokens().borderRadiusButtons.width;
  static  double buttongroupButtonMPaddingRight = DefaultSizeTokens().spacing4x.width;
  static  double buttongroupButtonMPaddingLeft = DefaultSizeTokens().spacing4x.width;
  static  double buttongroupButtonMSpacing = DefaultSizeTokens().spacing2x.width;
  static  double buttongroupButtonMHeight = DefaultSizeTokens().sizeM.width;
  static  double buttongroupButtonMMinWidth = buttongroupButtonMHeight;
  static  double buttongroupButtonMIconSize = DefaultSizeTokens().sizeXs.width;
  static  double buttongroupButtonLBorderWidth = DefaultSizeTokens().borderWidthButtons.width;
  static  double buttongroupButtonLBorderRadius = DefaultSizeTokens().borderRadiusButtons.width;
  static  double buttongroupButtonLPaddingRight = DefaultSizeTokens().spacing6x.width;
  static  double buttongroupButtonLPaddingLeft = DefaultSizeTokens().spacing6x.width;
  static  double buttongroupButtonLSpacing = DefaultSizeTokens().spacing2x.width;
  static  double buttongroupButtonLHeight = DefaultSizeTokens().sizeL.width;
  static  double buttongroupButtonLMinWidth = buttongroupButtonLHeight;
  static  double buttongroupButtonLIconSize = DefaultSizeTokens().sizeXxs.width;
  static  Color buttongroupBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double buttongroupLSpacing = DefaultSizeTokens().spacing3x.width;
  static  double buttongroupMSpacing = DefaultSizeTokens().spacing2x.width;
  static  double buttongroupSSpacing = DefaultSizeTokens().spacing2x.width;
  static  double buttongroupCirclebuttonLWidth = DefaultSizeTokens().sizeL.width;
  static  double buttongroupCirclebuttonMWidth = DefaultSizeTokens().sizeM.width;
  static  double buttongroupCirclebuttonSWidth = DefaultSizeTokens().sizeS.width;
  static  double buttongroupCirclebuttonBorderradius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double buttongroupCirclebuttonS2Width = DefaultSizeTokens().sizeS.width;
  static  double buttongroupCirclebuttonM2Width = DefaultSizeTokens().sizeM.width;
  static  double buttongroupCirclebuttonL2Width = DefaultSizeTokens().sizeL.width;
  static  double buttongroupSquarebuttonSWidth = DefaultSizeTokens().sizeS.width;
  static  double buttongroupSquarebuttonMWidth = DefaultSizeTokens().sizeM.width;
  static  double buttongroupSquarebuttonLWidth = DefaultSizeTokens().sizeL.width;
  static  Color buttongroupButtonCopyPrimaryBgColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonCopyPrimaryBgColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonCopyPrimaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonCopyPrimaryIconColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonCopyPrimaryIconColorHover = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonCopyPrimaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopyPrimaryBorderColorDefault = DefaultColorTokens().none;
  static  Color buttongroupButtonCopyPrimaryBorderColorHover = DefaultColorTokens().none;
  static  Color buttongroupButtonCopyPrimaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color buttongroupButtonCopyPrimaryTextColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonCopyPrimaryTextColorHover = DefaultColorTokens().semanticFgInvert;
  static  Color buttongroupButtonCopyPrimaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopySecondaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color buttongroupButtonCopySecondaryBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color buttongroupButtonCopySecondaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonCopySecondaryBorderColorDefault = DefaultColorTokens().semanticBorderSoft;
  static  Color buttongroupButtonCopySecondaryBorderColorHover = DefaultColorTokens().semanticBorderSoftHover;
  static  Color buttongroupButtonCopySecondaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color buttongroupButtonCopySecondaryTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopySecondaryTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopySecondaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopySecondaryIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopySecondaryIconColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopySecondaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopyTertiaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color buttongroupButtonCopyTertiaryBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color buttongroupButtonCopyTertiaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonCopyTertiaryTextColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonCopyTertiaryTextColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonCopyTertiaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopyTertiaryIconColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonCopyTertiaryIconColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonCopyTertiaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopyTertiaryBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color buttongroupButtonCopyTertiaryBorderColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color buttongroupButtonCopyTertiaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color buttongroupButtonCopyWhiteBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color buttongroupButtonCopyWhiteBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color buttongroupButtonCopyWhiteBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color buttongroupButtonCopyWhiteTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopyWhiteTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopyWhiteTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopyWhiteIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopyWhiteIconColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color buttongroupButtonCopyWhiteIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color buttongroupButtonCopyWhiteBorderColorDefault = DefaultColorTokens().none;
  static  Color buttongroupButtonCopyWhiteBorderColorHover = DefaultColorTokens().none;
  static  Color buttongroupButtonCopyWhiteBorderColorDisabled = DefaultColorTokens().none;
  static  Color inputPrimaryBgColorDefault = DefaultColorTokens().semanticBgSurface2;
  static  Color inputPrimaryBgColorHover = DefaultColorTokens().semanticBgSurface3;
  static  Color inputPrimaryBgColorFocus = DefaultColorTokens().semanticBgSurface1;
  static  Color inputPrimaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color inputPrimaryBgColorError = inputPrimaryBgColorDefault;
  static  Color inputPrimaryBgColorSuccess = inputPrimaryBgColorDefault;
  static  Color inputPrimaryinputTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color inputPrimaryinputTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputPrimaryinputTextColorHover = inputPrimaryinputTextColorDefault;
  static  Color inputPrimaryinputTextColorFocus = inputPrimaryinputTextColorDefault;
  static  Color inputPrimaryinputTextColorError = inputPrimaryinputTextColorDefault;
  static  Color inputPrimaryinputTextColorSuccess = inputPrimaryinputTextColorDefault;
  static  Color inputPrimaryBorderColorDefault = DefaultColorTokens().none;
  static  Color inputPrimaryBorderColorHover = DefaultColorTokens().none;
  static  Color inputPrimaryBorderColorFocus = DefaultColorTokens().semanticAccentDefault;
  static  Color inputPrimaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color inputPrimaryBorderColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color inputPrimaryBorderColorSuccess = DefaultColorTokens().semanticSuccessDefault;
  static  Color inputPrimaryIconLeftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryIconLeftColorHover = inputPrimaryIconLeftColorDefault;
  static  Color inputPrimaryIconLeftColorFocus = inputPrimaryIconLeftColorDefault;
  static  Color inputPrimaryIconLeftColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color inputPrimaryIconLeftColorSuccess = DefaultColorTokens().semanticSuccessDefault;
  static  Color inputPrimaryIconLeftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputPrimaryLabelTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryLabelTextColorHover = inputPrimaryLabelTextColorDefault;
  static  Color inputPrimaryLabelTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputPrimaryPlaceholderTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryPlaceholderTextColorHover = inputPrimaryPlaceholderTextColorDefault;
  static  Color inputPrimaryPlaceholderTextColorFocus = inputPrimaryPlaceholderTextColorDefault;
  static  Color inputPrimaryPlaceholderTextColorError = inputPrimaryPlaceholderTextColorDefault;
  static  Color inputPrimaryPlaceholderTextColorSuccess = inputPrimaryPlaceholderTextColorDefault;
  static  Color inputPrimaryPlaceholderTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputPrimaryHintTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryHintTextColorHover = inputPrimaryHintTextColorDefault;
  static  Color inputPrimaryHintTextColorFocus = inputPrimaryHintTextColorDefault;
  static  Color inputPrimaryHintTextColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color inputPrimaryHintTextColorSuccess = DefaultColorTokens().semanticSuccessDefault;
  static  Color inputPrimaryHintTextColorDisabled = inputPrimaryHintTextColorDefault;
  static  Color inputPrimaryCounterTextColorAllCounter = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryCounterTextColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryCounterTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputPrimaryIconRightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputPrimaryIconRightColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputSecondaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color inputSecondaryBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color inputSecondaryBgColorFocus = inputSecondaryBgColorDefault;
  static  Color inputSecondaryBgColorError = inputSecondaryBgColorDefault;
  static  Color inputSecondaryBgColorSuccess = inputSecondaryBgColorDefault;
  static  Color inputSecondaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color inputSecondaryIconLeftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryIconLeftColorHover = inputSecondaryIconLeftColorDefault;
  static  Color inputSecondaryIconLeftColorFocus = inputSecondaryIconLeftColorDefault;
  static  Color inputSecondaryIconLeftColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color inputSecondaryIconLeftColorSuccess = DefaultColorTokens().semanticSuccessDefault;
  static  Color inputSecondaryIconLeftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputSecondaryLabelTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryLabelTextColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryLabelTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputSecondaryinputTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color inputSecondaryinputTextColorHover = inputSecondaryinputTextColorDefault;
  static  Color inputSecondaryinputTextColorFocus = inputSecondaryinputTextColorDefault;
  static  Color inputSecondaryinputTextColorError = inputSecondaryinputTextColorDefault;
  static  Color inputSecondaryinputTextColorSuccess = inputSecondaryinputTextColorDefault;
  static  Color inputSecondaryinputTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputSecondaryCounterTextColorAllCounter = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryCounterTextColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryCounterTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color inputSecondaryPlaceholderTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryPlaceholderTextColorHover = inputSecondaryPlaceholderTextColorDefault;
  static  Color inputSecondaryPlaceholderTextColorFocus = inputSecondaryPlaceholderTextColorDefault;
  static  Color inputSecondaryPlaceholderTextColorError = inputSecondaryPlaceholderTextColorDefault;
  static  Color inputSecondaryPlaceholderTextColorSuccess = inputSecondaryPlaceholderTextColorDefault;
  static  Color inputSecondaryPlaceholderTextColorDisabled = inputSecondaryPlaceholderTextColorDefault;
  static  Color inputSecondaryHintTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryHintTextColorHover = inputSecondaryHintTextColorDefault;
  static  Color inputSecondaryHintTextColorFocus = inputSecondaryHintTextColorDefault;
  static  Color inputSecondaryHintTextColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color inputSecondaryHintTextColorSuccess = DefaultColorTokens().semanticSuccessDefault;
  static  Color inputSecondaryHintTextColorDisabled = inputSecondaryHintTextColorDefault;
  static  Color inputSecondaryBorderColorDefault = DefaultColorTokens().semanticBorderLightest;
  static  Color inputSecondaryBorderColorHover = DefaultColorTokens().semanticBorderLightestHover;
  static  Color inputSecondaryBorderColorFocus = DefaultColorTokens().semanticAccentDefault;
  static  Color inputSecondaryBorderColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color inputSecondaryBorderColorSuccess = DefaultColorTokens().semanticSuccessDefault;
  static  Color inputSecondaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color inputSecondaryIconRightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputSecondaryIconRightColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double inputBorderWidth = DefaultSizeTokens().borderWidthInputs.width;
  static  double inputLHeight = DefaultSizeTokens().sizeL.width;
  static  double inputLSpacing = DefaultSizeTokens().spacing2x.width;
  static  double inputLPaddingLeft = DefaultSizeTokens().spacing4x.width;
  static  double inputLPaddingRight = DefaultSizeTokens().spacing4x.width;
  static  double inputLLabeloutsideSpacing = DefaultSizeTokens().spacing2x.width;
  static  double inputLHintSpacing = DefaultSizeTokens().spacing2x.width;
  static  double inputLIconSize = DefaultSizeTokens().sizeXs.width;
  static  double inputMHeight = DefaultSizeTokens().sizeM.width;
  static  double inputMSpacing = DefaultSizeTokens().spacing2x.width;
  static  double inputMPaddingLeft = DefaultSizeTokens().spacing3x.width;
  static  double inputMPaddingRight = DefaultSizeTokens().spacing3x.width;
  static  double inputMLabeloutsideSpacing = DefaultSizeTokens().spacing2x.width;
  static  double inputMHintSpacing = DefaultSizeTokens().spacing2x.width;
  static  double inputBorderRadius = DefaultSizeTokens().borderRadiusInputs.width;
  static  Color checkboxBgColorUncheckedDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color checkboxBgColorUncheckedHover = DefaultColorTokens().semanticBgSurface2;
  static  Color checkboxBgColorUncheckedDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color checkboxBgColorCheckedDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color checkboxBgColorCheckedHover = DefaultColorTokens().semanticAccentHover;
  static  Color checkboxBgColorCheckedDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color checkboxBorderColorUncheckedDefault = DefaultColorTokens().semanticBorderDefault;
  static  Color checkboxBorderColorUncheckedHover = DefaultColorTokens().semanticBorderDefaultHover;
  static  Color checkboxBorderColorUncheckedDisabled = DefaultColorTokens().none;
  static  Color checkboxBorderColorCheckedDefault = DefaultColorTokens().none;
  static  Color checkboxBorderColorCheckedHover = DefaultColorTokens().none;
  static  Color checkboxBorderColorCheckedDisabled = DefaultColorTokens().none;
  static  Color checkboxLabelColorUncheckedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color checkboxLabelColorUncheckedHover = DefaultColorTokens().semanticFgDefault;
  static  Color checkboxLabelColorUncheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color checkboxLabelColorCheckedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color checkboxLabelColorCheckedHover = DefaultColorTokens().semanticFgDefault;
  static  Color checkboxLabelColorCheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color checkboxIconColorCheckedDefault = DefaultColorTokens().semanticFgInvert;
  static  Color checkboxIconColorCheckedHover = DefaultColorTokens().semanticFgInvert;
  static  Color checkboxIconColorCheckedDisabled = DefaultColorTokens().semanticFgInvert;
  static  double checkboxXsBorderWidth = DefaultSizeTokens().borderWidthM.width;
  static  double checkboxXsHeight = DefaultSizeTokens().sizeXs.width;
  static  double checkboxXsPadding = DefaultSizeTokens().spacing05x.width;
  static  double checkboxXsSpacing = DefaultSizeTokens().spacing1x.width;
  static  double checkboxSSpacing = DefaultSizeTokens().spacing2x.width;
  static  double checkboxSHeight = DefaultSizeTokens().sizeS.width;
  static  double checkboxSBorderWidth = DefaultSizeTokens().borderWidthM.width;
  static  double checkboxSPadding = DefaultSizeTokens().spacing05x.width;
  static  Color chipgroupChipsSelectedBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color chipgroupChipsSelectedBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color chipgroupChipsSelectedBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color chipgroupChipsSelectedLabelColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color chipgroupChipsSelectedLabelColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color chipgroupChipsSelectedLabelColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color chipgroupChipsSelectedIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsSelectedIconColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsSelectedIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color chipgroupChipsSelectedBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color chipgroupChipsSelectedBorderColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color chipgroupChipsSelectedBorderColorDisabled = DefaultColorTokens().none;
  static  Color chipgroupChipsSelectedCounterColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsSelectedCounterColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsSelectedCounterColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color chipgroupChipsNotSelectedBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color chipgroupChipsNotSelectedBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color chipgroupChipsNotSelectedBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color chipgroupChipsNotSelectedLabelColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color chipgroupChipsNotSelectedLabelColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color chipgroupChipsNotSelectedLabelColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color chipgroupChipsNotSelectedCounterColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsNotSelectedCounterColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsNotSelectedCounterColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color chipgroupChipsNotSelectedBorderColorDefault = DefaultColorTokens().none;
  static  Color chipgroupChipsNotSelectedBorderColorHover = DefaultColorTokens().none;
  static  Color chipgroupChipsNotSelectedBorderColorDisabled = DefaultColorTokens().none;
  static  Color chipgroupChipsNotSelectedIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsNotSelectedIconColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color chipgroupChipsNotSelectedIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double chipgroupChipsBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double chipgroupChipsSpacing = DefaultSizeTokens().spacing2x.width;
  static  double chipgroupChipsPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double chipgroupChipsCloseablePaddingLeft = DefaultSizeTokens().spacing4x.width;
  static  double chipgroupChipsCloseablePaddingRight = DefaultSizeTokens().spacing2x.width;
  static  double chipgroupChipsNotCloseablePaddingRight = DefaultSizeTokens().spacing4x.width;
  static  double chipgroupChipsNotCloseablePaddingLeft = DefaultSizeTokens().spacing4x.width;
  static  double chipgroupChipsBorderRadius = DefaultSizeTokens().borderRadiusControls.width;
  static  double chipgroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color radiobuttonBgColorUncheckedDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color radiobuttonBgColorUncheckedHover = DefaultColorTokens().semanticBgSurface3;
  static  Color radiobuttonBgColorUncheckedDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color radiobuttonBgColorCheckedDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color radiobuttonBgColorCheckedHover = DefaultColorTokens().semanticBgSurface3;
  static  Color radiobuttonBgColorCheckedDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color radiobuttonBorderColorUncheckedDefault = DefaultColorTokens().semanticBorderDefault;
  static  Color radiobuttonBorderColorUncheckedHover = DefaultColorTokens().semanticBorderDefaultHover;
  static  Color radiobuttonBorderColorUncheckedDisabled = DefaultColorTokens().none;
  static  Color radiobuttonBorderColorCheckedDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color radiobuttonBorderColorCheckedHover = DefaultColorTokens().semanticAccentHover;
  static  Color radiobuttonBorderColorCheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color radiobuttonLabelColorUncheckedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color radiobuttonLabelColorUncheckedHover = DefaultColorTokens().semanticFgDefault;
  static  Color radiobuttonLabelColorUncheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color radiobuttonLabelColorCheckedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color radiobuttonLabelColorCheckedHover = DefaultColorTokens().semanticFgDefault;
  static  Color radiobuttonLabelColorCheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color radiobuttonIconColorCheckedDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color radiobuttonIconColorCheckedHover = DefaultColorTokens().semanticAccentHover;
  static  Color radiobuttonIconColorCheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double radiobuttonHeight = DefaultSizeTokens().sizeS.width;
  static  double radiobuttonBorderWidth = DefaultSizeTokens().borderWidthControls.width;
  static  double radiobuttonSpacing = DefaultSizeTokens().spacing2x.width;
  static  double radiobuttonBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double radiobuttonSSize = DefaultSizeTokens().sizeS.width;
  static  double radiobuttonXsSize = DefaultSizeTokens().sizeXs.width;
  static  Color switchTrackColorUncheckedDefault = DefaultColorTokens().semanticBgSurface5;
  static  Color switchTrackColorUncheckedHover = DefaultColorTokens().semanticBgSurface6;
  static  Color switchTrackColorUncheckedDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color switchTrackColorCheckedDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color switchTrackColorCheckedHover = DefaultColorTokens().semanticAccentHover;
  static  Color switchTrackColorCheckedDisabled = DefaultColorTokens().semanticAccentLight;
  static  Color switchKnobColorUncheckedDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color switchKnobColorUncheckedHover = DefaultColorTokens().semanticBgSurface1;
  static  Color switchKnobColorUncheckedDisabled = DefaultColorTokens().semanticBgSurface1;
  static  Color switchKnobColorCheckedDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color switchKnobColorCheckedHover = DefaultColorTokens().semanticBgSurface1;
  static  Color switchKnobColorCheckedDisabled = DefaultColorTokens().semanticBgSurface1;
  static  double switchKnobBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  Color switchLabelColorUncheckedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color switchLabelColorUncheckedHover = DefaultColorTokens().semanticFgDefault;
  static  Color switchLabelColorUncheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color switchLabelColorCheckedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color switchLabelColorCheckedHover = DefaultColorTokens().semanticFgDefault;
  static  Color switchLabelColorCheckedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double switchSpacing = DefaultSizeTokens().spacing2x.width;
  static  double switchHeight = DefaultSizeTokens().sizeXs.width;
  static  double switchBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double switchPaddingLeft = DefaultSizeTokens().spacing05x.width;
  static  double switchPaddingRight = DefaultSizeTokens().spacing05x.width;
  static  double switchPaddingTop = DefaultSizeTokens().spacing05x.width;
  static  double switchPaddingBottom = DefaultSizeTokens().spacing05x.width;
  static  Color functionbuttonSecondaryIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color functionbuttonSecondaryIconColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color functionbuttonSecondaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonSecondaryTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color functionbuttonSecondaryTextColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color functionbuttonSecondaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonPrimaryIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color functionbuttonPrimaryIconColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color functionbuttonPrimaryIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonPrimaryTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color functionbuttonPrimaryTextColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color functionbuttonPrimaryTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonAccentIconColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color functionbuttonAccentIconColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color functionbuttonAccentIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonAccentTextColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color functionbuttonAccentTextColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color functionbuttonAccentTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonCriticalIconColorDefault = DefaultColorTokens().semanticErrorDefault;
  static  Color functionbuttonCriticalIconColorHover = DefaultColorTokens().semanticErrorHover;
  static  Color functionbuttonCriticalIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color functionbuttonCriticalTextColorDefault = DefaultColorTokens().semanticErrorDefault;
  static  Color functionbuttonCriticalTextColorHover = DefaultColorTokens().semanticErrorHover;
  static  Color functionbuttonCriticalTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double functionbuttonBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double functionbuttonHeight = DefaultSizeTokens().sizeXs.width;
  static  Color toastnotificationBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color toastnotificationTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color toastnotificationDangerIconleftColorDefault = DefaultColorTokens().semanticErrorDefault;
  static  Color toastnotificationDangerIconleftColorHover = DefaultColorTokens().semanticErrorHover;
  static  Color toastnotificationDangerBorderColorDefault = DefaultColorTokens().semanticErrorDefault;
  static  Color toastnotificationDangerBorderColorHover = DefaultColorTokens().semanticErrorHover;
  static  Color toastnotificationSuccessIconColorDefault = DefaultColorTokens().semanticSuccessDefault;
  static  Color toastnotificationSuccessIconColorHover = DefaultColorTokens().semanticSuccessHover;
  static  Color toastnotificationSuccessBorderColorDefault = DefaultColorTokens().semanticSuccessDefault;
  static  Color toastnotificationSuccessBorderColorHover = DefaultColorTokens().semanticSuccessHover;
  static  Color toastnotificationInfoIconColorDefault = DefaultColorTokens().semanticInfoDefault;
  static  Color toastnotificationInfoIconColorHover = DefaultColorTokens().semanticInfoHover;
  static  Color toastnotificationInfoBorderColorDefault = DefaultColorTokens().semanticInfoDefault;
  static  Color toastnotificationInfoBorderColorHover = DefaultColorTokens().semanticInfoHover;
  static  Color toastnotificationIconrightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double toastnotificationBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double toastnotificationMinHeight = DefaultSizeTokens().sizeXl.width;
  static  double toastnotificationIconleftsize = DefaultSizeTokens().sizeXs.width;
  static  double toastnotificationIconrightsize = DefaultSizeTokens().sizeXxs.width;
  static  double toastnotificationSpacing = DefaultSizeTokens().spacing2x.width;
  static  double toastnotificationPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double toastnotificationPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double toastnotificationBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double toastnotificationContentSpacing = DefaultSizeTokens().spacing2x.width;
  static  double toastnotificationWidth = DefaultSizeTokens().widthXsContainer.width;
  static  Color breadcrumbgroupBreadcrumbBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color breadcrumbgroupBreadcrumbBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color breadcrumbgroupBreadcrumbTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color breadcrumbgroupBreadcrumbTextColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color breadcrumbgroupBreadcrumbIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color breadcrumbgroupBreadcrumbIconColorHover = DefaultColorTokens().semanticFgSoft;
  static  double breadcrumbgroupBreadcrumbBorderRadius = DefaultSizeTokens().borderRadiusControls.width;
  static  double breadcrumbgroupBreadcrumbBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double breadcrumbgroupBreadcrumbPaddingLeft = DefaultSizeTokens().spacing2x.width;
  static  double breadcrumbgroupBreadcrumbSpacing = DefaultSizeTokens().spacing1x.width;
  static  double breadcrumbgroupBreadcrumbHeight = DefaultSizeTokens().sizeXs.width;
  static  double breadcrumbgroupBreadcrumbMinWidth = buttongroupButtonSHeight;
  static  double breadcrumbgroupBreadcrumbNotcurrentPaddingRight = DefaultSizeTokens().spacing1x.width;
  static  double breadcrumbgroupBreadcrumbCurrentPaddingRight = DefaultSizeTokens().spacing2x.width;
  static  double breadcrumbgroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color pickerdateMonthDaysBgColorSelected = DefaultColorTokens().semanticBgSurface13;
  static  Color pickerdateMonthDaysBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color pickerdateMonthDaysBgColorSelectedRange = DefaultColorTokens().semanticBgSurface5;
  static  Color pickerdateMonthDaysBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color pickerdateMonthDaysBgColorSelectedRangeHover = DefaultColorTokens().semanticBgSurface6;
  static  Color pickerdateMonthDaysBgColorSelectedHover = DefaultColorTokens().semanticBgSurface14;
  static  Color pickerdateMonthDaysTextColorSelected = DefaultColorTokens().semanticFgInvert;
  static  Color pickerdateMonthDaysTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color pickerdateMonthDaysTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double pickerdateMonthDaysHeight = DefaultSizeTokens().sizeL.width;
  static  double pickerdateMonthDaysWidth = DefaultSizeTokens().sizeL.width;
  static  double pickerdateMonthPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  double pickerdateMonthSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color pickerdateBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color pickerdateHeaderBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color pickerdateHeaderTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color pickerdateHeaderArrowsBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color pickerdateHeaderArrowsBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color pickerdateHeaderArrowsIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color pickerdateHeaderArrowsIconColorHover = DefaultColorTokens().semanticFgSoft;
  static  double pickerdateHeaderArrowsBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double pickerdateHeaderPaddingHorizontal = DefaultSizeTokens().spacing2x.width;
  static  double pickerdateHeaderPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  Color pickerdateWeekdaysBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color pickerdateWeekdaysTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double pickerdateBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double pickerdateGap = DefaultSizeTokens().spacing3x.width;
  static  Color inputnumberstepperStepperbuttonBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color inputnumberstepperStepperbuttonBgColorHover = DefaultColorTokens().semanticBgSurface3;
  static  Color inputnumberstepperStepperbuttonBgColorDisabled = DefaultColorTokens().semanticBgSurface2;
  static  Color inputnumberstepperStepperbuttonIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color inputnumberstepperStepperbuttonIconColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color inputnumberstepperStepperbuttonIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double inputnumberstepperStepperbuttonBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  Color inputnumberstepperBgColorDefault = DefaultColorTokens().semanticBgSurface2;
  static  Color inputnumberstepperBgColorHover = DefaultColorTokens().semanticBgSurface3;
  static  Color inputnumberstepperBgColorDisabledFull = DefaultColorTokens().semanticBgSurface2;
  static  Color inputnumberstepperTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color inputnumberstepperTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color inputnumberstepperTextColorDisabledFull = DefaultColorTokens().semanticFgDisabled;
  static  Color inputnumberstepperBorderColorDefault = DefaultColorTokens().none;
  static  Color inputnumberstepperBorderColorHover = DefaultColorTokens().none;
  static  Color inputnumberstepperBorderColorDisabledFull = DefaultColorTokens().none;
  static  double inputnumberstepperMHeight = DefaultSizeTokens().sizeM.width;
  static  double inputnumberstepperMBorderRadius = DefaultSizeTokens().borderRadiusL.width;
  static  double inputnumberstepperMBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double inputnumberstepperLHeight = DefaultSizeTokens().sizeL.width;
  static  double inputnumberstepperLBorderRadius = DefaultSizeTokens().borderRadiusL.width;
  static  double inputnumberstepperLBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  Color badgePrimarySuccessBgColorDefault = DefaultColorTokens().semanticSuccessDefault;
  static  Color badgePrimarySuccessLabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimarySuccessBorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryInfoBgColorDefault = DefaultColorTokens().semanticInfoDefault;
  static  Color badgePrimaryInfoLabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryInfoBorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryWarningBgColorDefault = DefaultColorTokens().semanticWarningDefault;
  static  Color badgePrimaryWarningLabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryWarningBorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryErrorBgColorDefault = DefaultColorTokens().semanticErrorDefault;
  static  Color badgePrimaryErrorLabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryErrorBorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryNeutralBgColorDefault = DefaultColorTokens().semanticBgSurface8;
  static  Color badgePrimaryNeutralLabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryNeutralBorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryStatus01BgColorDefault = DefaultColorTokens().semanticStatus01Default;
  static  Color badgePrimaryStatus01LabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryStatus01BorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryStatus02BgColorDefault = DefaultColorTokens().semanticStatus02Default;
  static  Color badgePrimaryStatus02LabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryStatus02BorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryStatus03BgColorDefault = DefaultColorTokens().semanticStatus03Default;
  static  Color badgePrimaryStatus03LabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryStatus03BorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryStatus04BgColorDefault = DefaultColorTokens().semanticStatus04Default;
  static  Color badgePrimaryStatus04LabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryStatus04BorderColorDefault = DefaultColorTokens().none;
  static  Color badgePrimaryStatus05BgColorDefault = DefaultColorTokens().semanticStatus05Default;
  static  Color badgePrimaryStatus05LabelColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color badgePrimaryStatus05BorderColorDefault = DefaultColorTokens().none;
  static  double badgePrimarySBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double badgePrimarySSpacing = DefaultSizeTokens().spacing1x.width;
  static  double badgePrimarySHeight = DefaultSizeTokens().sizeS.width;
  static  double badgePrimarySPaddingLeft = DefaultSizeTokens().spacing4x.width;
  static  double badgePrimarySPaddingRight = DefaultSizeTokens().spacing4x.width;
  static  double badgePrimarySBorderRadius = DefaultSizeTokens().borderRadiusControls.width;
  static  double badgePrimaryXsBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double badgePrimaryXsBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double badgePrimaryXsSpacing = DefaultSizeTokens().spacing1x.width;
  static  double badgePrimaryXsHeight = DefaultSizeTokens().sizeXs.width;
  static  double badgePrimaryXsPaddingHorizontal = DefaultSizeTokens().spacing2x.width;
  static  double badgePrimaryXxsBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double badgePrimaryXxsBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double badgePrimaryXxsSpacing = DefaultSizeTokens().spacing1x.width;
  static  double badgePrimaryXxsPaddingHorizontal = DefaultSizeTokens().spacing15x.width;
  static  double badgePrimaryXxsPaddingVertical = DefaultSizeTokens().spacing05x.width;
  static  Color badgeSecondarySuccessLabelColorDefault = DefaultColorTokens().semanticSuccessDefault;
  static  Color badgeSecondaryInfoLabelColorDefault = DefaultColorTokens().semanticInfoDefault;
  static  Color badgeSecondaryWarningLabelColorDefault = DefaultColorTokens().semanticWarningDefault;
  static  Color badgeSecondaryErrorLabelColorDefault = DefaultColorTokens().semanticErrorDefault;
  static  Color badgeSecondaryNeutralLabelColorDefault = DefaultColorTokens().primitiveNeutralcold300;
  static  Color badgeSecondaryStatus01LabelColorDefault = DefaultColorTokens().semanticStatus01Default;
  static  Color badgeSecondaryStatus02LabelColorDefault = DefaultColorTokens().semanticStatus02Default;
  static  Color badgeSecondaryStatus03LabelColorDefault = DefaultColorTokens().semanticStatus03Default;
  static  Color badgeSecondaryStatus04LabelColorDefault = DefaultColorTokens().semanticStatus04Default;
  static  Color badgeSecondaryStatus05LabelColorDefault = DefaultColorTokens().semanticStatus05Default;
  static  double badgeSecondarySBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double badgeSecondarySBorderRadius = DefaultSizeTokens().borderRadiusM.width;
  static  double badgeSecondarySSpacing = DefaultSizeTokens().spacing1x.width;
  static  double badgeSecondarySHeight = DefaultSizeTokens().sizeS.width;
  static  double badgeSecondarySPaddingLeft = DefaultSizeTokens().spacingNone.width;
  static  double badgeSecondarySPaddingRight = DefaultSizeTokens().spacingNone.width;
  static  double badgeSecondaryXsBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double badgeSecondaryXsBorderRadius = DefaultSizeTokens().borderRadiusM.width;
  static  double badgeSecondaryXsSpacing = DefaultSizeTokens().spacing1x.width;
  static  double badgeSecondaryXsHeight = DefaultSizeTokens().sizeXs.width;
  static  double badgeSecondaryXsPaddingLeft = DefaultSizeTokens().spacingNone.width;
  static  double badgeSecondaryXsPaddingRight = DefaultSizeTokens().spacingNone.width;
  static  Color dropdownmenuPrimaryItemBgColorNotSelectedDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color dropdownmenuPrimaryItemBgColorNotSelectedHover = DefaultColorTokens().semanticBgSurface2;
  static  Color dropdownmenuPrimaryItemBgColorNotSelectedDisabled = DefaultColorTokens().semanticBgSurface1;
  static  Color dropdownmenuPrimaryItemBgColorSelectedDefault = DefaultColorTokens().semanticBgSurface2;
  static  Color dropdownmenuPrimaryItemBgColorSelectedHover = DefaultColorTokens().semanticBgSurface3;
  static  Color dropdownmenuPrimaryItemBgColorSelectedDisabled = DefaultColorTokens().semanticBgSurface1;
  static  Color dropdownmenuPrimaryItemTextColorNotSelectedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color dropdownmenuPrimaryItemTextColorNotSelectedHover = DefaultColorTokens().semanticFgDefault;
  static  Color dropdownmenuPrimaryItemTextColorNotSelectedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color dropdownmenuPrimaryItemTextColorSelectedDefault = DefaultColorTokens().semanticFgDefault;
  static  Color dropdownmenuPrimaryItemTextColorSelectedHover = DefaultColorTokens().semanticFgDefault;
  static  Color dropdownmenuPrimaryItemTextColorSelectedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color dropdownmenuPrimaryItemIconColorNotSelectedDefault = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemIconColorNotSelectedHover = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemIconColorNotSelectedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color dropdownmenuPrimaryItemIconColorSelectedDefault = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemIconColorSelectedHover = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemIconColorSelectedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color dropdownmenuPrimaryItemTitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemSubtitleColorNotSelectedDefault = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemSubtitleColorNotSelectedHover = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemSubtitleColorNotSelectedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color dropdownmenuPrimaryItemSubtitleColorSelectedDefault = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemSubtitleColorSelectedHover = DefaultColorTokens().semanticFgSoft;
  static  Color dropdownmenuPrimaryItemSubtitleColorSelectedDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color dropdownmenuPrimaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color dropdownmenuPrimaryBorderColorDefault = DefaultColorTokens().none;
  static  double dropdownmenuMBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double dropdownmenuMBorderRadius = DefaultSizeTokens().borderRadiusNone.width;
  static  double dropdownmenuMHeight = DefaultSizeTokens().sizeL.width;
  static  double dropdownmenuMPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double dropdownmenuMSpacing = DefaultSizeTokens().spacing2x.width;
  static  double dropdownmenuMPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  double dropdownmenuBorderRadius = DefaultSizeTokens().borderRadiusL.width;
  static  double dropdownmenuSBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double dropdownmenuSBorderRadius = DefaultSizeTokens().borderRadiusNone.width;
  static  double dropdownmenuSPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double dropdownmenuSHeight = DefaultSizeTokens().sizeM.width;
  static  double dropdownmenuSSpacing = DefaultSizeTokens().spacing2x.width;
  static  double dropdownmenuSPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double dropdownmenuLBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double dropdownmenuLBorderRadius = DefaultSizeTokens().borderRadiusNone.width;
  static  double dropdownmenuLPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double dropdownmenuLHeight = DefaultSizeTokens().sizeXxl.width;
  static  double dropdownmenuLSpacing = DefaultSizeTokens().spacing2x.width;
  static  double dropdownmenuLPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double dropdownmenuXlBorderWidth = DefaultSizeTokens().borderWidthNone.width;
  static  double dropdownmenuXlBorderRadius = DefaultSizeTokens().borderRadiusNone.width;
  static  double dropdownmenuXlPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double dropdownmenuXlHeight = DefaultSizeTokens().sizeXxl.width;
  static  double dropdownmenuXlSpacing = DefaultSizeTokens().spacing2x.width;
  static  double dropdownmenuXlPaddingVertical = DefaultSizeTokens().spacing5x.width;
  static  Color scrollTrackBgColorDefault = DefaultColorTokens().semanticBgSurface3;
  static  Color scrollTrackBgColorHover = DefaultColorTokens().semanticBgSurface4;
  static  Color scrollKnobBgColorDefault = DefaultColorTokens().semanticFgSofter;
  static  Color scrollKnobBgColorHover = DefaultColorTokens().semanticFgSoft;
  static  double scrollSize = 4;
  static  Color stepperBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color stepperBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color stepperBgColorDisabled = DefaultColorTokens().semanticBgSurface2;
  static  Color stepperPrimaryBorderColorDefault = DefaultColorTokens().none;
  static  Color stepperPrimaryBorderColorHover = DefaultColorTokens().none;
  static  Color stepperPrimaryStepperbuttonIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color stepperPrimaryStepperbuttonIconColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color stepperPrimaryStepperbuttonIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color stepperPrimaryStepperbuttonBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color stepperPrimaryStepperbuttonBgColorHover = DefaultColorTokens().semanticBgSurface3;
  static  Color stepperPrimaryStepperbuttonBgColorDisabled = DefaultColorTokens().semanticBgSurface1;
  static  Color stepperTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color stepperTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color stepperTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color stepperSecondaryStepperbuttonIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color stepperSecondaryStepperbuttonIconColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color stepperSecondaryStepperbuttonIconColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color stepperSecondaryStepperbuttonBgColorDefault = DefaultColorTokens().none;
  static  Color stepperSecondaryStepperbuttonBgColorHover = DefaultColorTokens().none;
  static  Color stepperSecondaryStepperbuttonBgColorDisabled = DefaultColorTokens().none;
  static  Color stepperSecondaryButtonwrapperBgColorDefault = DefaultColorTokens().none;
  static  Color stepperSecondaryButtonwrapperBgColorHover = DefaultColorTokens().semanticBgSurface3;
  static  Color stepperSecondaryButtonwrapperBgColorDisabled = DefaultColorTokens().none;
  static  Color stepperSecondaryBorderColorDefault = DefaultColorTokens().none;
  static  Color stepperSecondaryBorderColorHover = DefaultColorTokens().none;
  static  double stepperLHeight = DefaultSizeTokens().sizeL.width;
  static  double stepperLBorderRadius = DefaultSizeTokens().borderRadiusM.width;
  static  double stepperLSpacing = DefaultSizeTokens().spacing1x.width;
  static  double stepperLBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double stepperMHeight = DefaultSizeTokens().sizeM.width;
  static  double stepperMBorderRadius = DefaultSizeTokens().borderRadiusM.width;
  static  double stepperMBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double stepperMSpacing = DefaultSizeTokens().spacing1x.width;
  static  double stepperSHeight = DefaultSizeTokens().sizeS.width;
  static  double stepperSBorderRadius = DefaultSizeTokens().borderRadiusM.width;
  static  double stepperSBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double stepperSSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color textareaPrimaryBgColorDefault = DefaultColorTokens().semanticBgSurface2;
  static  Color textareaPrimaryBgColorHover = DefaultColorTokens().semanticBgSurface3;
  static  Color textareaPrimaryBgColorFocus = DefaultColorTokens().semanticBgSurface1;
  static  Color textareaPrimaryBgColorError = inputPrimaryBgColorDefault;
  static  Color textareaPrimaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color textareaPrimaryLabelTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaPrimaryInputTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color textareaPrimaryInputTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color textareaPrimaryCounterTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaPrimaryPlaceholderTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaPrimaryPlaceholderTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color textareaPrimaryHintTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaPrimaryHintTextColorHover = inputPrimaryHintTextColorDefault;
  static  Color textareaPrimaryHintTextColorFocus = inputPrimaryHintTextColorDefault;
  static  Color textareaPrimaryHintTextColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color textareaPrimaryHintTextColorDisabled = inputPrimaryHintTextColorDefault;
  static  Color textareaPrimaryBorderColorDefault = DefaultColorTokens().none;
  static  Color textareaPrimaryBorderColorHover = DefaultColorTokens().none;
  static  Color textareaPrimaryBorderColorFocus = DefaultColorTokens().semanticAccentDefault;
  static  Color textareaPrimaryBorderColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color textareaPrimaryBorderColorDisabled = DefaultColorTokens().none;
  static  Color textareaSecondaryBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color textareaSecondaryBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color textareaSecondaryBgColorFocus = DefaultColorTokens().semanticBgSurface1;
  static  Color textareaSecondaryBgColorError = inputSecondaryBgColorDefault;
  static  Color textareaSecondaryBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color textareaSecondaryLabelTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaSecondaryInputTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color textareaSecondaryInputTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color textareaSecondaryCounterTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaSecondaryPlaceholderTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaSecondaryPlaceholderTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color textareaSecondaryHintTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color textareaSecondaryHintTextColorHover = inputPrimaryHintTextColorDefault;
  static  Color textareaSecondaryHintTextColorFocus = inputPrimaryHintTextColorDefault;
  static  Color textareaSecondaryHintTextColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color textareaSecondaryHintTextColorDisabled = inputPrimaryHintTextColorDefault;
  static  Color textareaSecondaryBorderColorDefault = DefaultColorTokens().semanticBorderLightest;
  static  Color textareaSecondaryBorderColorHover = DefaultColorTokens().semanticBorderLightestHover;
  static  Color textareaSecondaryBorderColorFocus = DefaultColorTokens().semanticAccentDefault;
  static  Color textareaSecondaryBorderColorError = DefaultColorTokens().semanticErrorDefault;
  static  Color textareaSecondaryBorderColorDisabled = DefaultColorTokens().none;
  static  double textareaLMinHeight = 100;
  static  double textareaLSpacing = DefaultSizeTokens().spacing2x.width;
  static  double textareaLPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double textareaLLabeloutsideSpacing = DefaultSizeTokens().spacing2x.width;
  static  double textareaLHintSpacing = DefaultSizeTokens().spacing2x.width;
  static  double textareaLPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double textareaBorderWidth = DefaultSizeTokens().borderWidthInputs.width;
  static  double textareaBorderRadius = DefaultSizeTokens().borderRadiusInputs.width;
  static  double textareaMMinHeight = 76;
  static  double textareaMSpacing = DefaultSizeTokens().spacing2x.width;
  static  double textareaMPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double textareaMPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double textareaMLabeloutsideSpacing = DefaultSizeTokens().spacing2x.width;
  static  double textareaMHintSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color productcardInfocardProductinfoPricewrapperMainpriceColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color productcardInfocardProductinfoPricewrapperPricesubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double productcardInfocardProductinfoPricewrapperSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color productcardInfocardProductinfoProductsubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color productcardInfocardProductinfoProducttitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double productcardInfocardProductinfoSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color productcardInfocardBgDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color productcardInfocardBgHover = DefaultColorTokens().semanticBgSurface1;
  static  double productcardInfocardSpacing = DefaultSizeTokens().spacing3x.width;
  static  double productcardInfocardPaddingHorizontal = DefaultSizeTokens().spacing2x.width;
  static  double productcardInfocardPaddingVertical = DefaultSizeTokens().spacing2x.width;
  // static  Color productcardProductphotoTopMenuIconBgColorDefault = DefaultColorTokens().#ffffff80;
  // static  Color productcardProductphotoTopMenuIconBgColorHover = DefaultColorTokens().#ffffff80;
  static  Color productcardProductphotoTopMenuIconBgColorPressed = DefaultColorTokens().semanticAccentDefault;
  static  Color productcardProductphotoTopMenuIconBorderColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color productcardProductphotoTopMenuIconBorderColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color productcardProductphotoTopMenuIconBorderColorPressed = DefaultColorTokens().semanticAccentDefault;
  static  double productcardProductphotoTopMenuIconSize = DefaultSizeTokens().sizeXs.width;
  static  double productcardProductphotoTopMenuSpacing = DefaultSizeTokens().spacing2x.width;
  static  double productcardProductphotoTopMenuPaddingHorizontal = DefaultSizeTokens().spacing2x.width;
  static  double productcardProductphotoTopMenuPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double productcardProductphotoTopMenuHeight = DefaultSizeTokens().sizeM.width;
  static  double productcardProductphotoTopMenuChipsSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color productcardProductphotoColorDefault = DefaultColorTokens().semanticBgSurface4;
  static  Color productcardProductphotoBottommenuRatingBgColorPressed = DefaultColorTokens().semanticAccentDefault;
  static  Color productcardProductphotoBottommenuRatingBorderColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color productcardProductphotoBottommenuRatingBorderColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color productcardProductphotoBottommenuRatingBorderColorPressed = DefaultColorTokens().semanticAccentDefault;
  static  double productcardProductphotoBottommenuRatingSize = DefaultSizeTokens().sizeXs.width;
  static  double productcardProductphotoBottommenuSpacing = DefaultSizeTokens().spacing2x.width;
  static  double productcardProductphotoBottommenuPaddingHorizontal = DefaultSizeTokens().spacing2x.width;
  static  double productcardProductphotoBottommenuPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double productcardProductphotoBottommenuHeight = DefaultSizeTokens().sizeM.width;
  static  double productcardProductphotoBottommenuChipsSpacing = DefaultSizeTokens().spacing1x.width;
  static  double productcardProductphotoMinHeight = 130;
  static  Color productcardBorderColorDefault = DefaultColorTokens().semanticBorderLightest;
  static  Color productcardBorderColorHover = DefaultColorTokens().semanticBorderLightestHover;
  static  Color productcardBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color productcardBgColorHover = DefaultColorTokens().semanticBgSurface1;
  static  double productcardBorderWidth = DefaultSizeTokens().borderWidthXs.width;
  static  double productcardBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double productcardMinHeight = 260;
  static  Color navbarBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color navbarTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color navbarIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color navbarSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color navbarIconrightregularColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color navbarIconrightfavoriteNotpressedBorderColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color navbarIconrightfavoriteNotpressedFillColorDefault = DefaultColorTokens().none;
  static  Color navbarIconrightfavoritePressedBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color navbarIconrightfavoritePressedFillColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color navbarSystemelementColorDefault = DefaultColorTokens().semanticFgDefault;
  static  bool navbarXsElement = true;
  static  bool navbarMdElement = false;
  static  double navbarWidth = DefaultSizeTokens().widthXsFullwidth.width;
  static  Color dividerColorDefault = DefaultColorTokens().semanticBorderSoft;
  static  double dividerBorderWidth = DefaultSizeTokens().borderWidthDividers.width;
  static  Color navmenuNavmenuelementBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color navmenuNavmenuelementBgColorDisabled = DefaultColorTokens().semanticBgSurface1;
  static  Color navmenuNavmenuelementBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color navmenuNavmenuelementInactiveIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color navmenuNavmenuelementInactiveIconleftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color navmenuNavmenuelementInactiveBorderColorDefault = DefaultColorTokens().none;
  static  Color navmenuNavmenuelementInactiveBorderColorDisabled = DefaultColorTokens().none;
  static  Color navmenuNavmenuelementTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color navmenuNavmenuelementTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color navmenuNavmenuelementIconrightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color navmenuNavmenuelementIconrightColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color navmenuNavmenuelementNotifcounterBgColorDefault = DefaultColorTokens().semanticStatus05Default;
  static  Color navmenuNavmenuelementNotifcounterBgColorDisabled = DefaultColorTokens().semanticStatus05Light;
  static  Color navmenuNavmenuelementNotifcounterTextColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color navmenuNavmenuelementNotifcounterTextColorDisabled = DefaultColorTokens().semanticFgInvert;
  static  Color navmenuNavmenuelementActiveIconleftColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color navmenuNavmenuelementActiveIconleftColorDisabled = DefaultColorTokens().semanticAccentLightest;
  static  Color navmenuNavmenuelementActiveBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color navmenuNavmenuelementActiveBorderColorDisabled = DefaultColorTokens().semanticAccentLight;
  static  double navmenuNavmenuelementWidth = DefaultSizeTokens().widthXsContainer.width;
  static  double navmenuNavmenuelementBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double navmenuNavmenuelementBorderWidth = DefaultSizeTokens().borderWidthM.width;
  static  Color navmenuNavmenuelementLabelColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color navmenuNavmenuelementLabelColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color navmenuNavmenuelementSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color navmenuNavmenuelementSubtitleColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double navmenuNavmenuelementPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double navmenuNavmenuelementPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double navmenuSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color categorycardgroupCategorycardBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color categorycardgroupCategorycardTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double categorycardgroupCategorycardPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  double categorycardgroupCategorycardPaddingHorizontal = DefaultSizeTokens().spacing3x.width;
  static  double categorycardgroupCategorycardBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  bool categorycardgroupXsAmount = true;
  static  bool categorycardgroupMdAmount = false;
  static  double categorycardgroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  double categorycardgroupWidth = DefaultSizeTokens().widthXsContainer.width;
  static  Color taggroupTagInactiveBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color taggroupTagInactiveBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color taggroupTagInactiveBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color taggroupTagInactiveTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagInactiveTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagInactiveTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagInactiveIconright1ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagInactiveIconright1ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagInactiveIconright1ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagInactiveBorderColorDefault = DefaultColorTokens().semanticBorderSoft;
  static  Color taggroupTagInactiveBorderColorHover = DefaultColorTokens().semanticBorderSoftHover;
  static  Color taggroupTagInactiveBorderColorDisabled = DefaultColorTokens().none;
  static  Color taggroupTagInactiveIconleftColorDefault = DefaultColorTokens().semanticFgSofter;
  static  Color taggroupTagInactiveIconleftColorHover = DefaultColorTokens().semanticFgSofter;
  static  Color taggroupTagInactiveIconleftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagInactiveIconright2ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagInactiveIconright2ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagInactiveIconright2ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagAccentActiveIconright1ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagAccentActiveIconright1ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagAccentActiveIconright1ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagAccentActiveTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagAccentActiveTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagAccentActiveTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagAccentActiveBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color taggroupTagAccentActiveBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color taggroupTagAccentActiveBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color taggroupTagAccentActiveBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color taggroupTagAccentActiveBorderColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color taggroupTagAccentActiveBorderColorDisabled = DefaultColorTokens().none;
  static  Color taggroupTagAccentActiveIconleftColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color taggroupTagAccentActiveIconleftColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color taggroupTagAccentActiveIconleftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagAccentActiveIconright2ColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color taggroupTagAccentActiveIconright2ColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color taggroupTagAccentActiveIconright2ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagNeutralActiveIconright1ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagNeutralActiveIconright1ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagNeutralActiveIconright1ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagNeutralActiveTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagNeutralActiveTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagNeutralActiveTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagNeutralActiveBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color taggroupTagNeutralActiveBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  Color taggroupTagNeutralActiveBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color taggroupTagNeutralActiveBorderColorDefault = DefaultColorTokens().semanticBorderDefault;
  static  Color taggroupTagNeutralActiveBorderColorHover = DefaultColorTokens().semanticBorderDefaultHover;
  static  Color taggroupTagNeutralActiveBorderColorDisabled = DefaultColorTokens().none;
  static  Color taggroupTagNeutralActiveIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagNeutralActiveIconleftColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagNeutralActiveIconleftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagNeutralActiveIconright2ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagNeutralActiveIconright2ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagNeutralActiveIconright2ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledActiveIconright1ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledActiveIconright1ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledActiveIconright1ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledActiveTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagFilledActiveTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagFilledActiveTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledActiveBgColorDefault = DefaultColorTokens().semanticBgSurface4;
  static  Color taggroupTagFilledActiveBgColorHover = DefaultColorTokens().semanticBgSurface5;
  static  Color taggroupTagFilledActiveBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color taggroupTagFilledActiveBorderColorDefault = DefaultColorTokens().none;
  static  Color taggroupTagFilledActiveBorderColorHover = DefaultColorTokens().none;
  static  Color taggroupTagFilledActiveBorderColorDisabled = DefaultColorTokens().none;
  static  Color taggroupTagFilledActiveIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledActiveIconleftColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledActiveIconleftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledActiveIconright2ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledActiveIconright2ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledActiveIconright2ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledInactiveIconright1ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledInactiveIconright1ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledInactiveIconright1ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledInactiveTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagFilledInactiveTextColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color taggroupTagFilledInactiveTextColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledInactiveBgColorDefault = DefaultColorTokens().semanticBgSurface2;
  static  Color taggroupTagFilledInactiveBgColorHover = DefaultColorTokens().semanticBgSurface4;
  static  Color taggroupTagFilledInactiveBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color taggroupTagFilledInactiveBorderColorDefault = DefaultColorTokens().none;
  static  Color taggroupTagFilledInactiveBorderColorHover = DefaultColorTokens().none;
  static  Color taggroupTagFilledInactiveBorderColorDisabled = DefaultColorTokens().none;
  static  Color taggroupTagFilledInactiveIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledInactiveIconleftColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledInactiveIconleftColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color taggroupTagFilledInactiveIconright2ColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledInactiveIconright2ColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color taggroupTagFilledInactiveIconright2ColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  double taggroupTagHeight = DefaultSizeTokens().sizeS.width;
  static  double taggroupTagBorderRadius = DefaultSizeTokens().borderRadiusCircular.width;
  static  double taggroupTagPaddingHorizontal = DefaultSizeTokens().spacing3x.width;
  static  double taggroupTagPaddingVertical = DefaultSizeTokens().spacing15x.width;
  static  double taggroupTagSpacing = DefaultSizeTokens().spacing1x.width;
  static  double taggroupTagBorderWidth = DefaultSizeTokens().borderWidthM.width;
  static  double taggroupTagContentSpacing = DefaultSizeTokens().spacing15x.width;
  static  double taggroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color blockBlocktitleHeadingColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color blockBlocktitleTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color blockBlocktitleSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color blockBlocktitleIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double blockBlocktitleIconleftSize = DefaultSizeTokens().sizeXs.width;
  static  Color blockBlocktitleIconrightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double blockBlocktitleIconrightSize = DefaultSizeTokens().sizeXs.width;
  static  double blockBlocktitleSPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double blockBlocktitleSPaddingTop = DefaultSizeTokens().spacing3x.width;
  static  double blockBlocktitleSPaddingBottom = DefaultSizeTokens().spacing2x.width;
  static  double blockBlocktitleSSpacing = DefaultSizeTokens().spacing3x.width;
  static  double blockBlocktitleMPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double blockBlocktitleMPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  double blockBlocktitleMSpacing = DefaultSizeTokens().spacing3x.width;
  static  double blockBlocktitleLPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double blockBlocktitleLPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double blockBlocktitleLSpacing = DefaultSizeTokens().spacing3x.width;
  static  double blockBlocktitleTextContentSpacing = DefaultSizeTokens().spacing1x.width;
  static  double blockBlocktitleWidth = DefaultSizeTokens().widthXsContainer.width;
  static  Color blockBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double blockSpacing = 0;
  static  double blockBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double blockWidth = DefaultSizeTokens().widthXsContainer.width;
  static  Color listitemTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color listitemSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color listitemIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double listitemIconleftSize = DefaultSizeTokens().sizeXs.width;
  static  Color listitemIconrightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double listitemIconrightSize = DefaultSizeTokens().sizeXs.width;
  static  Color listitemBodytextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color listitemPricetextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color listitemAccentlistitemBgColorDefault = DefaultColorTokens().semanticBgSurface2;
  static  Color listitemAccentlistitemBodytextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color listitemAccentlistitemSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color listitemAccentlistitemIconrightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double listitemAccentlistitemIconrightSize = DefaultSizeTokens().sizeXs.width;
  static  Color listitemAccentlistitemIconleftColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  double listitemAccentlistitemIconleftSize = DefaultSizeTokens().sizeXs.width;
  static  double listitemAccentlistitemBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double listitemContentTextContentSpacing = DefaultSizeTokens().spacing1x.width;
  static  double listitemContentSpacing = DefaultSizeTokens().spacing3x.width;
  static  double listitemSPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  double listitemSPaddingHorizontal = DefaultSizeTokens().spacingNone.width;
  static  double listitemMPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  double listitemMPaddingHorizontal = DefaultSizeTokens().spacingNone.width;
  static  double listitemLPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double listitemLPaddingHorizontal = DefaultSizeTokens().spacingNone.width;
  static  double listitemWidth = DefaultSizeTokens().widthXsContainer.width;
  static  double listitemXlPaddingVertical = DefaultSizeTokens().spacing5x.width;
  static  double listitemXlPaddingHorizontal = DefaultSizeTokens().spacingNone.width;
  static  Color tabbarTabbaritemActiveIconColorDefault = functionbuttonAccentIconColorDefault;
  static  Color tabbarTabbaritemActiveTextColorDefault = functionbuttonAccentIconColorDefault;
  static  Color tabbarTabbaritemInactiveIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color tabbarTabbaritemInactiveTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double tabbarTabbaritemPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double tabbarTabbaritemSpacing = DefaultSizeTokens().spacing1x.width;
  static  double tabbarTabbaritemIconSize = DefaultSizeTokens().sizeXs.width;
  static  Color tabbarBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double tabbarPaddingHorizontal = DefaultSizeTokens().spacing6x.width;
  static  double tabbarPaddingTop = DefaultSizeTokens().spacing4x.width;
  static  double tabbarPaddingBottom = DefaultSizeTokens().spacing10x.width;
  static  double tabbarSpacing = DefaultSizeTokens().spacing3x.width;
  static  double tabbarBorderRadius = DefaultSizeTokens().borderRadiusXl.width;
  static  Color productcardorderContentTextcontentPricewrapperPricesubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color productcardorderContentTextcontentPricewrapperPriceColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  double productcardorderContentTextcontentPricewrapperSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color productcardorderContentTextcontentProducttitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color productcardorderContentTextcontentProductsubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double productcardorderContentTextcontentSpacing = DefaultSizeTokens().spacing1x.width;
  static  double productcardorderContentSpacing = DefaultSizeTokens().spacing3x.width;
  static  Color productcardorderIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double productcardorderPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double productcardorderSpacing = DefaultSizeTokens().spacing2x.width;
  static  double productcardorderWidth = DefaultSizeTokens().widthXsContainer.width;
  static  double productcardorderPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  Color notificationTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color notificationBodytextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color notificationDateandtimeColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color notificationCloseiconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double notificationCloseiconHeight = DefaultSizeTokens().sizeXxs.width;
  static  double notificationCloseiconWidth = DefaultSizeTokens().sizeXxs.width;
  static  Color notificationCategoryiconBgColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color notificationCategoryiconIconColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color notificationReddotColorDefault = DefaultColorTokens().semanticStatus05Default;
  static  Color notificationBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double notificationPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double notificationPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double notificationBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double notificationSpacing = DefaultSizeTokens().spacing4x.width;
  static  double notificationTextcontentSpacing = DefaultSizeTokens().spacing1x.width;
  static  double notificationTextcontentTitlesectionSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color partnerbannergroupPartnerbannerDarkBgColorDefault = DefaultColorTokens().semanticBgSurface12;
  static  Color partnerbannergroupPartnerbannerDarkContentColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color partnerbannergroupPartnerbannerLightBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color partnerbannergroupPartnerbannerLightContentColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double partnerbannergroupPartnerbannerHeight = 80;
  static  double partnerbannergroupPartnerbannerWidth = 160;
  static  double partnerbannergroupPartnerbannerBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double partnerbannergroupPartnerbannerPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double partnerbannergroupPartnerbannerPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double partnerbannergroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  double partnerbannergroupWidth = DefaultSizeTokens().widthXsContainer.width;
  static  Color adbannergroupAdbannerDarkTitleColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color adbannergroupAdbannerDarkSubtitleColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color adbannergroupAdbannerLightTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color adbannergroupAdbannerLightSubtitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double adbannergroupAdbannerBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  // static  String adbannergroupAdbannerButtonType = AppTypography.white;
  static  double adbannergroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  double adbannergroupWidth = DefaultSizeTokens().widthXsContainer.width;
  static  Color tabgroupTabActiveIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color tabgroupTabActiveLabelColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color tabgroupTabActiveBgColorDefault = DefaultColorTokens().none;
  static  Color tabgroupTabActiveIndicatorColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color tabgroupTabInactiveIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color tabgroupTabInactiveLabelColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color tabgroupTabInactiveBgColorDefault = DefaultColorTokens().none;
  static  Color tabgroupTabInactiveBgColorHover = DefaultColorTokens().semanticBgSurface2;
  static  double tabgroupTabPaddingHorizontal = DefaultSizeTokens().spacing1x.width;
  static  double tabgroupTabPaddingVertical = DefaultSizeTokens().spacing3x.width;
  static  double tabgroupTabSpacing = DefaultSizeTokens().spacing4x.width;
  static  Color tabgroupBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double tabgroupBorderRadius = DefaultSizeTokens().borderRadiusControls.width;
  static  double tabgroupSpacing = DefaultSizeTokens().spacing2x.width;
  static  Color productcollectioncardDarkTextColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color productcollectioncardLightTextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double productcollectioncardBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  Color sliderPrimaryTrackBgColorDefault = DefaultColorTokens().semanticBgSurface4;
  static  Color sliderPrimaryTrackBgColorDisabled = DefaultColorTokens().semanticBgSurface4;
  static  Color sliderPrimaryHighlighttrackBgColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color sliderPrimaryHighlighttrackBgColorDisabled = DefaultColorTokens().semanticBgDisabled;
  static  Color sliderPrimaryHandleBgColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color sliderPrimaryHandleBgColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color sliderPrimaryHandleBgColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color tileSelectedBorderColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color tileSelectedBorderColorHover = DefaultColorTokens().semanticAccentHover;
  static  Color tileSelectedBorderColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color tileSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color tileSubtitleColorHover = DefaultColorTokens().semanticFgSoft;
  static  Color tileSubtitleColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color tileTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color tileTitleColorHover = DefaultColorTokens().semanticFgDefault;
  static  Color tileTitleColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color tileNotselectedBorderColorDefault = DefaultColorTokens().semanticBorderSoft;
  static  Color tileNotselectedBorderColorHover = DefaultColorTokens().semanticBorderSoftHover;
  static  Color tileNotselectedBorderColorDisabled = DefaultColorTokens().semanticFgDisabled;
  static  Color tileIconrightColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color tileIconleftColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double tileBorderWidth = DefaultSizeTokens().borderWidthS.width;
  static  double tileBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double tilePaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double tilePaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double tileSpacing = DefaultSizeTokens().spacing2x.width;
  static  double tileContentwrapperSpacing = DefaultSizeTokens().spacing2x.width;
  static  double tileContentwrapperTextwrapperSpacing = DefaultSizeTokens().spacing2x.width;
  static  double tileContentwrapperTextwrapperTextcontentSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color modalBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color modalGrabberIconColor = DefaultColorTokens().semanticFgSofter;
  static  bool modalGrabberXsScreen = true;
  static  bool modalGrabberMdScreen = false;
  static  Color modalModalcontentTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color modalModalcontentSubtitleColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double modalModalcontentSpacing = DefaultSizeTokens().spacing2x.width;
  static  double modalBorderTopLeftRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double modalBorderTopRightRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double modalSpacing = DefaultSizeTokens().spacing3x.width;
  static  double modalModalbodyPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double modalBorderBottomLeftRadius = DefaultSizeTokens().borderRadiusNone.width;
  static  double modalBorderBottomRightRadius = DefaultSizeTokens().borderRadiusNone.width;
  static  double modalPaddingHorizontal = DefaultSizeTokens().spacingNone.width;
  static  double modalPaddingVertical = DefaultSizeTokens().spacingNone.width;
  static  Color slotBorderColorDefault = DefaultColorTokens().semanticBorderSoft;
  static  Color slotTextColorDefault = DefaultColorTokens().semanticFgSofter;
  static  Color homeindicatorIconColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color ratingRatingstarFullIconColorDefault = DefaultColorTokens().semanticStatus07Default;
  static  Color ratingRatingstarEmptyIconColorDefault = DefaultColorTokens().semanticFgSofter;
  static  Color ratingTextColorDefault = DefaultColorTokens().semanticFgSoft;
  static  double ratingSpacing = DefaultSizeTokens().spacing1x.width;
  static  Color progresscircleFinishedBaseColorDefault = DefaultColorTokens().semanticBgSurface5;
  static  Color progresscircleFinishedProgressstrokeColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color progresscircleFinishedIconColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color progresscircleFinishedTextColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color progresscircleUnfinishedIconColorDefault = DefaultColorTokens().semanticFgSoft;
  static  Color progresscircleUnfinishedBaseColorDefault = DefaultColorTokens().semanticBgSurface5;
  static  Color progresscircleUnfinishedProgressstrokeColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color progresscircleUnfinishedTextColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  double progresscircleSStrokeWidth = DefaultSizeTokens().borderWidthL.width;
  static  double progresscircleMStrokeWidth = DefaultSizeTokens().borderWidthXl.width;
  static  double progresscircleXsStrokeWidth = DefaultSizeTokens().borderWidthL.width;
  static  double progresscircleXxsStrokeWidth = DefaultSizeTokens().borderWidthL.width;
  static  Color progressbarBaseColorDefault = DefaultColorTokens().semanticBgSurface5;
  static  Color progressbarProgressColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color progressbarLabelColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double progressbarSteppedSpacing = DefaultSizeTokens().spacing2x.width;
  static  double progressbarLabeled = DefaultSizeTokens().spacing3x.width;
  static  Color pageindicatorIndicatorActiveColorDefault = DefaultColorTokens().semanticAccentDefault;
  static  Color pageindicatorIndicatorInactiveColorDefault = DefaultColorTokens().semanticFgInvert;
  static  double pageindicatorWidth = DefaultSizeTokens().widthXsFullwidth.width;
  static  double pageindicatorSpacing = DefaultSizeTokens().spacing15x.width;
  static  double pageindicatorPaddingVertical = DefaultSizeTokens().spacing2x.width;
  static  Color linkColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color linkColorHover = DefaultColorTokens().semanticAccentDefault;
  static  Color dialogBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color dialogTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color dialogDescriptionColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double dialogBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double dialogPaddingHorizontal = DefaultSizeTokens().spacing6x.width;
  static  double dialogPaddingVertical = DefaultSizeTokens().spacing6x.width;
  static  Color popupBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color popupTitleColorDefault = DefaultColorTokens().semanticFgDefault;
  static  Color popupDescriptionColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double popupBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double popupXsWidth = 336;
  static  double popupSWidth = 470;
  static  double popupMWidth = 630;
  static  double popupLWidth = 800;
  static  double popupXlWidth = 904;
  static  double popupPaddingHorizontal = DefaultSizeTokens().spacing10x.width;
  static  double popupPaddingVertical = DefaultSizeTokens().spacing8x.width;
  static  double popupSpacing = DefaultSizeTokens().spacing4x.width;
  static  Color buttondockBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double buttondockWidth = DefaultSizeTokens().widthXsFullwidth.width;
  static  double buttondockBorderTopRightRadius = DefaultSizeTokens().borderRadiusXl.width;
  static  double buttondockBorderTopLeftRadius = DefaultSizeTokens().borderRadiusXl.width;
  static  double buttondockPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  Color drawerBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double drawerPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  double drawerPaddingVertical = DefaultSizeTokens().spacing4x.width;
  static  double drawerBorderTopRightRadius = DefaultSizeTokens().borderRadiusXl.width;
  static  double drawerBorderBottomRightRadius = DefaultSizeTokens().borderRadiusXl.width;
  static  Color segmentedcontrolBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  double segmentedcontrolBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double segmentedcontrolPaddingHorizontal = DefaultSizeTokens().spacing1x.width;
  static  double segmentedcontrolPaddingVertical = DefaultSizeTokens().spacing1x.width;
  static  Color orderstatusBgColorDefault = DefaultColorTokens().semanticBgSurface1;
  static  Color orderstatusBodytextColorDefault = DefaultColorTokens().semanticFgDefault;
  static  double orderstatusBorderRadius = DefaultSizeTokens().borderRadiusCards.width;
  static  double orderstatusPaddingHorizontal = DefaultSizeTokens().spacing4x.width;
  static  Color footerBgColorDefault = DefaultColorTokens().semanticBgSurface13;
  static  Color footerColumntitleColorDefault = DefaultColorTokens().semanticFgInvert;
  static  Color footerTextColorDefault = DefaultColorTokens().semanticFgInvert;
  static  double footerFootercolumnSpacing = DefaultSizeTokens().spacing4x.width;
  static  Color footerFootercolumnColumntitleColorDefault = DefaultColorTokens().semanticFgInvert;
  static  double footerFootercolumnGap = DefaultSizeTokens().spacing4x.width;
  static  Color footerFirstcolumnTextColorDefault = DefaultColorTokens().semanticFgInvert;
  static  double footerFirstcolumnSpacing = DefaultSizeTokens().spacing3x.width;
  static  double footerPaddingHorizontal = 80;
  static  double footerGap = 48;
  static  double footerSpacing = 56;
  static  double footerLastcolumnIconsSpacing = DefaultSizeTokens().spacing2x.width;
  static  bool productcollectionXsAmount = true;
  static  bool productcollectionMdAmount = false;
  static  double productcollectionSpacing = DefaultSizeTokens().spacing2x.width;
  static  double productcollectionWidth = DefaultSizeTokens().widthXsContainer.width;
  static  double photoholderSWidth = 80;
  static  double photoholderSHeight = 60;
  static  double photoholderSBorderRadius = DefaultSizeTokens().borderRadiusS.width;
  static  double photoholderMWidth = 130;
  static  double photoholderMHeight = 100;
  static  double photoholderMBorderRadius = DefaultSizeTokens().borderRadiusS.width;
  static  double photoholderLWidth = 160;
  static  double photoholderLHeight = 120;
  static  double photoholderLBorderRadius = DefaultSizeTokens().borderRadiusM.width;
}
